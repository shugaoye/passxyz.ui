<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>關於</value>
  </data>
  <data name="Appname" xml:space="preserve">
    <value>PassXYZ.UI.Editor</value>
  </data>
  <data name="action_id_add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="action_id_logout" xml:space="preserve">
    <value>登出</value>
  </data>
  <data name="action_id_switchusers" xml:space="preserve">
    <value>切換用戶</value>
  </data>
  <data name="action_id_cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="action_id_browse" xml:space="preserve">
    <value>瀏覽</value>
  </data>
  <data name="action_id_copy" xml:space="preserve">
    <value>拷貝</value>
  </data>
  <data name="action_id_generatebarcode" xml:space="preserve">
    <value>生成條形碼</value>
  </data>
  <data name="action_id_generateqrcode" xml:space="preserve">
    <value>生成二維碼</value>
  </data>
  <data name="action_id_sendemail" xml:space="preserve">
    <value>發郵件</value>
  </data>
  <data name="action_id_show" xml:space="preserve">
    <value>顯示</value>
  </data>
  <data name="action_id_save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="action_id_search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="action_id_edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="action_id_delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="alert_id_no" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="alert_id_remove" xml:space="preserve">
    <value>請確認刪除</value>
  </data>
  <data name="alert_id_yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="action_id_import" xml:space="preserve">
    <value>導入</value>
  </data>
  <data name="alert_id_ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="action_id_cut" xml:space="preserve">
    <value>剪切</value>
  </data>
  <data name="action_id_paste" xml:space="preserve">
    <value>粘貼</value>
  </data>
  <data name="action_id_login" xml:space="preserve">
    <value>登錄</value>
  </data>
  <data name="action_id_update" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="about_passxyz_copyright" xml:space="preserve">
    <value>Copyright 2020, 葉樹杲 All rights reserved.</value>
  </data>
  <data name="about_passxyz_license" xml:space="preserve">
    <value>PassXYZ使用Apache版權協議2.0版。如果您使用該軟件，表示您同意Apache版權協議中的條款。您可以在下列網站獲得Apache 2.0版權協議。</value>
  </data>
  <data name="about_passxyz_web" xml:space="preserve">
    <value>您可以通過下面的PassXYZ網站下載模板，提交問題報告和了解使用說明。</value>
  </data>
  <data name="about_slogan" xml:space="preserve">
    <value>您的個人信息管家</value>
  </data>
  <data name="about_wechat_info" xml:space="preserve">
    <value>您也可以通過關註PassXYZ的微信公眾號提供關於使用的反饋。PassXYZ的微信公眾號是passxyz_kpclib。您也可以通過掃描下面的二維碼關註。</value>
  </data>
  <data name="action_id_attach" xml:space="preserve">
    <value>添加附件</value>
  </data>
  <data name="about_passxyz_usage" xml:space="preserve">
    <value>這篇文章是寫給[PassXYZ](https://passxyz.github.io/)初始用戶的簡短使用說明。如果您是[KeePass](https://keepass.info/)的資深用戶，可以跳過這篇文章去PassXYZ網站閱讀另外一篇叫**深入理解PassXYZ**的文章（[PassXYZ](https://passxyz.github.io/)的網站鏈接請點擊**幫助**頁面的**了解更多**）。

[PassXYZ](https://passxyz.github.io/)與其他密碼管理軟件一樣，使用其實相當簡單，沒有太多復雜的使用操作。當安裝好[PassXYZ](https://passxyz.github.io/)後，打開的第一個頁面是建立一個用戶名和設置一個主密碼。這裏需要提醒一下的是，這個主密碼非常重要，一旦忘記，就沒有人能打開這個數據庫了。

設置好用戶名和主密碼後，進入的將是一個可以記錄您所有個人信息的管理系統。那麽如何開始使用呢？屏幕右上角有三個圖標，根據圖標標識，您一定能認出來它們是**搜索**，**添加**和**退出**吧？

現在，您就可以開始添加您想讓[PassXYZ](https://passxyz.github.io/)幫您記住的任何個人信息了，比如說銀行卡、身份證、護照、社保卡、各類證書、常用網站賬號等等。以**身份證**為例吧：點擊加號圖標+，您可以看到屏幕會顯示**目錄**，**條目**，**便簽**和**從模板中選擇**共四個選項。沒發現**身份證**選項啊？沒關系，您可以先去**從模板中選擇**裏找找。很多常用的添加項目[PassXYZ](https://passxyz.github.io/)都有特制的固定模板，即便模板裏沒有您需要的添加項目，您也有三個輸入辦法：第一，懶人的辦法，所有找不到的添加項目都可以使用通用選項**條目**，然後自行逐項輸入您所需要記錄的信息，最後保存即可。這個是原來KeePass自帶的。第二，到[PassXYZ](https://passxyz.github.io/)網站上找找，那兒有更多模板。第三，如果都不滿意，您還可以自己在模板中創建一個新的。當您開始創建模板時，您已經是[PassXYZ](https://passxyz.github.io/)達人了！

上面介紹了**條目**和**從模板中選擇**。您這會兒可能會問，那**目錄**和**便簽**又是什麽？**目錄**其實就是文件夾，例如您可以首先建立一個叫**銀行**的目錄，然後進入此目錄，再選用**條目**形式分別輸入您各個銀行賬戶的信息，這樣，您所有的銀行信息都可以整齊地存放在**銀行**目錄下，方便您日後翻閱查找。再說**便簽**吧，它就是一個您可以用來記錄任何東西的地方，比如說這篇文章，也就是一個**便簽**。[PassXYZ](https://passxyz.github.io/)中的**便簽**是支持Markdown格式的，所以您可以用Markdown語法來美化**便簽**。

話說回來，身份證這項，在[PassXYZ](https://passxyz.github.io/)自帶模板裏是可以找到的。在模板裏選擇**身份證**，然後填上相關信息並保存就好了。除了證件上的信息，您還可以把證件的照片或掃描件作為附件加上。這樣，當您下次在外辦事遇到緊急情況需要證件復印件時，直接打開[PassXYZ](https://passxyz.github.io/)用微信分享一下就可以了。
[PassXYZ](https://passxyz.github.io/)的基本使用其實就是這麽簡單，想了解更多，歡迎您關註[PassXYZ](https://passxyz.github.io/)網站。

### 可能碰到的問題：

**支持指紋登錄嗎？**
支持，去**設置**中打開就可以了。

**可以導出數據嗎？**
可以，去**設置**中導出。

**可以同步嗎？**
沒問題，上一步導出後，在其他設備上導入，然後在**設置**中同步即可。

**PassXYZ自帶的模板可以在這裏下載：**

1. [英文模板](/passxyz_template/passxyz_en-us.t4xyz)
2. [中文簡體模板](/passxyz_template/passxyz_zh-hans.t4xyz)
3. [中文繁體模板](/passxyz_template/passxyz_zh-hant.t4xyz)</value>
  </data>
  <data name="action_id_share" xml:space="preserve">
    <value>分享</value>
  </data>
  <data name="action_id_close" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="about_acknowledgement" xml:space="preserve">
    <value>鳴謝</value>
  </data>
  <data name="about_url" xml:space="preserve">
    <value>https://passxyz.github.io/categories/%E5%B8%AE%E5%8A%A9/</value>
  </data>
  <data name="about_problem_report" xml:space="preserve">
    <value>如果在使用過程中發現任何問題，您可以將問題報告發送至PassXYZ的微信公眾號或郵件地址passxyz@foxmail.com.</value>
  </data>
  <data name="about_problem_report_send" xml:space="preserve">
    <value>發送問題報告</value>
  </data>
  <data name="about_problem_report_not_found" xml:space="preserve">
    <value>沒有發現問題報告。</value>
  </data>
  <data name="action_id_disable_sync" xml:space="preserve">
    <value>禁用雲同步</value>
  </data>
  <data name="action_id_enable_sync" xml:space="preserve">
    <value>啟用雲同步</value>
  </data>
  <data name="action_id_properties" xml:space="preserve">
    <value>屬性</value>
  </data>
  <data name="action_id_change_icon" xml:space="preserve">
    <value>更換圖標</value>
  </data>
  <data name="action_id_update_template" xml:space="preserve">
    <value>重置模板</value>
  </data>
  <data name="action_id_move" xml:space="preserve">
    <value>移動</value>
  </data>
  <data name="action_id_add_icon" xml:space="preserve">
    <value>添加圖標</value>
  </data>
  <data name="action_id_back" xml:space="preserve">
    <value>返回</value>
  </data>
</root>